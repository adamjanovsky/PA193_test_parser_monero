//
//  hash.hpp
//  tree_hash_clear
//
//  Created by Kristián Kozák on 06/11/2017.
//  Copyright © 2017 MUNI. All rights reserved.
//

#ifndef hash_hpp
#define hash_hpp

#include <array>


namespace hash {
    // Length of a hash in bytes
    const int HASH_SIZE = 32;
    
    // Type for storing has values
    typedef std::array<unsigned char, HASH_SIZE> hash_t;

    // constant of corrupted block hash computed by our parser, see function get_block_hash in block.cpp for explanation
    const hash_t corruptedBlockHash{{0x42, 0x6d, 0x16, 0xcf, 0xf0, 0x4c, 0x71, 0xf8,
                                     0xb1, 0x63, 0x40, 0xb7, 0x22, 0xdc, 0x40, 0x10, 0xa2,
                                     0xdd, 0x38, 0x31, 0xc2, 0x20, 0x41, 0x43, 0x1f, 0x77,
                                     0x25, 0x47, 0xba, 0x6e, 0x33, 0x1a}};
    // the correct block
    const hash_t corruptedBlockHashCorrected{{0xbb, 0xd6, 0x04, 0xd2, 0xba, 0x11, 0xba, 0x27,
                                              0x93, 0x5e, 0x00, 0x6e, 0xd3, 0x9c, 0x9b, 0xfd,
                                              0xd9, 0x9b, 0x76, 0xbf, 0x4a, 0x50, 0x65, 0x4b,
                                              0xc1, 0xe1, 0xe6, 0x12, 0x17, 0x96, 0x26, 0x98}};

}

#endif /* hash_h */
